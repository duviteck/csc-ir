We walked out of the hiring meeting frustrated, again Of the ten “passable” candidates we reviewed that day, none would receive offers Were we being too harsh, we wondered?
I, in particular, was disappointed We had rejected one of my candidates A former student One who I had referred He had a 3 73 GPA from the University of Washington, one of the best computer science schools in the world, and had done extensive work on open source projects He was energetic He was creative He worked hard He was sharp He was a true geek, in all the best ways
But, I had to agree with the rest of the committee: the data wasn’t there Even if my emphatic recommendation would sway them to reconsider, he would surely get rejected in the later stages of the hiring process There were just too many red flags
Though the interviewers generally believed that he was quite intelligent, he had struggled to develop good algorithms Most successful candidates could fly through the first question, which was a twist on a well known problem, but he struggled to develop his algorithm When he came up with one, he failed to consider solutions that optimized for other scenarios Finally, when he began coding, he flew through the code with an initial solution, but it was riddled with mistakes that he then failed to catch Though he wasn’t the worst candidate we'd seen by any measure, he was far from meeting “the bar” Rejected
When he asked for feedback over the phone a couple of weeks later, I struggled with what to tell him Be smarter? No, I knew he was brilliant Be a better coder? No, his skills were on-par with some of the best I'd seen
Like many motivated candidates, he had prepared extensively He had read K&R’s classic C book and he'd reviewed CLRS' famous algorithms textbook He could describe in detail the myriad of ways of balancing a tree, and he could do things in C that no sane programmer should ever want to do
I had to tell him the unfortunate truth: those books aren’t enough Academic books prepare you for fancy research, but they’re not going to help you much in an interview Why? I'll give you a hint: your interviewers haven’t seen Red-Black Trees since they were in school either
To crack the coding interview, you need to prepare with real interview questions You must practice on real problems, and learn their patterns